version: "3.9"

networks:
  nats:
    driver: bridge

volumes:
  postgres_data_container: {}
  prometheus_data: { }
  grafana_data: { }
  certs_data: { }

services:
  consul-svc:
    container_name: consul-svc
    image: bitnami/consul:latest
    restart: unless-stopped
    ports:
      - "8500:8500"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"


  postgres-server-svc:
    container_name: postgresql-server-svc
    image: postgres:13-alpine
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=micro
      # - POSTGRES_HOST=5432
    volumes:
      - postgres_data_container:/var/lib/postgresql/data
    networks:
      - "nats"
    labels:
      org.label-schema.group: "microservice"

  nodeexporter-svc:
    container_name: nodeexporter-svc
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  prometheus-svc:
    container_name: prometheus-svc
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=200h"
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    depends_on:
#      - cadvisor-svc
      - nodeexporter-svc
#      - nginxexporter-svc
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  alertmanager-svc:
    container_name: alertmanager-svc
    image: prom/alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  grafana-svc:
    container_name: grafana-svc
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=3001
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/grafana
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  pushgateway-svc:
    container_name: pushgateway-svc
    image: prom/pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  jaeger-collector-svc:
    container_name: jaeger-collector-svc
    restart: always
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      QUERY_BASE_PATH: /jaeger
#    depends_on:
#      - nginx-svc
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

